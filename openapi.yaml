openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Your API"
  description: "API for your application"

servers:
  - url: "/api"
    description: "Main API server"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: "Bad request"
      required:
        - code
        - message

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - email
        - created_at
        - updated_at

    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          minLength: 8
      required:
        - name
        - email
        - password

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password

    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          example: "bearer"
        expires_in:
          type: integer
          example: 3600
        refresh_token:
          type: string
      required:
        - access_token
        - token_type
        - expires_in

    Content:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        body:
          type: string
        user_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - title
        - body
        - user_id
        - created_at
        - updated_at

    CreateContentRequest:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
      required:
        - title
        - body

    AnalyticsData:
      type: object
      properties:
        total_users:
          type: integer
        total_contents:
          type: integer
        active_users_last_7_days:
          type: integer
        contents_created_last_7_days:
          type: integer
      required:
        - total_users
        - total_contents

paths:
  # User endpoints
  /users:
    get:
      summary: List all users
      security:
        - BearerAuth: []
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/{userId}:
    get:
      summary: Get user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      security:
        - BearerAuth: []
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Auth endpoints
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/refresh:
    post:
      summary: Refresh access token
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Token refreshed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "401":
          description: Invalid or expired token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Content endpoints
  /content:
    get:
      summary: List all content
      security:
        - BearerAuth: []
      responses:
        "200":
          description: A list of content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Content"

    post:
      summary: Create new content
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateContentRequest"
      responses:
        "201":
          description: Content created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Content"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /content/{contentId}:
    get:
      summary: Get content by ID
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Content details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Content"
        "404":
          description: Content not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Analytics endpoints
  /analytics:
    get:
      summary: Get analytics data
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Analytics data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
