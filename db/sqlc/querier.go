// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddLinkToSection(ctx context.Context, arg AddLinkToSectionParams) (*SectionLink, error)
	CreateAuth(ctx context.Context, arg CreateAuthParams) (*Auth, error)
	CreateLink(ctx context.Context, arg CreateLinkParams) (*Link, error)
	CreateOAuthAccount(ctx context.Context, arg CreateOAuthAccountParams) (*OauthAccount, error)
	CreateSection(ctx context.Context, arg CreateSectionParams) (*Section, error)
	CreateSocialLink(ctx context.Context, arg CreateSocialLinkParams) (*SocialLink, error)
	CreateTheme(ctx context.Context, arg CreateThemeParams) (*Theme, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (*User, error)
	CreateUserTheme(ctx context.Context, arg CreateUserThemeParams) (*UserTheme, error)
	DeleteAllUserOAuthAccounts(ctx context.Context, userID uuid.UUID) error
	DeleteAuth(ctx context.Context, userID uuid.UUID) error
	DeleteLink(ctx context.Context, linkID uuid.UUID) error
	DeleteOAuthAccount(ctx context.Context, arg DeleteOAuthAccountParams) error
	DeleteSection(ctx context.Context, sectionID uuid.UUID) error
	DeleteSocialLink(ctx context.Context, socialLinkID uuid.UUID) error
	DeleteTheme(ctx context.Context, themeID uuid.UUID) error
	DeleteUser(ctx context.Context, userID uuid.UUID) error
	DeleteUserAnalytics(ctx context.Context, userID uuid.UUID) error
	DeleteUserLinks(ctx context.Context, userID uuid.UUID) error
	DeleteUserSections(ctx context.Context, userID uuid.UUID) error
	DeleteUserSocialLinks(ctx context.Context, userID uuid.UUID) error
	DeleteUserTheme(ctx context.Context, userThemeID uuid.UUID) error
	GetActiveLinksByUserID(ctx context.Context, userID uuid.UUID) ([]*Link, error)
	GetActiveSectionsByUserID(ctx context.Context, userID uuid.UUID) ([]*Section, error)
	GetActiveSocialLinksByUserID(ctx context.Context, userID uuid.UUID) ([]*SocialLink, error)
	GetAuthByResetToken(ctx context.Context, resetToken *string) (*Auth, error)
	GetAuthByUserID(ctx context.Context, userID uuid.UUID) (*Auth, error)
	GetClickAnalyticsByDateRange(ctx context.Context, arg GetClickAnalyticsByDateRangeParams) ([]*GetClickAnalyticsByDateRangeRow, error)
	GetClickAnalyticsByReferrer(ctx context.Context, userID uuid.UUID) ([]*GetClickAnalyticsByReferrerRow, error)
	GetLink(ctx context.Context, linkID uuid.UUID) (*Link, error)
	GetLinkClicksByUserID(ctx context.Context, userID uuid.UUID) ([]*GetLinkClicksByUserIDRow, error)
	GetLinksByUserID(ctx context.Context, userID uuid.UUID) ([]*Link, error)
	GetOAuthAccountByProviderID(ctx context.Context, arg GetOAuthAccountByProviderIDParams) (*OauthAccount, error)
	GetOAuthAccountsByUserID(ctx context.Context, userID uuid.UUID) ([]*OauthAccount, error)
	GetSection(ctx context.Context, sectionID uuid.UUID) (*Section, error)
	GetSectionLinks(ctx context.Context, sectionID uuid.UUID) ([]*Link, error)
	GetSectionsByUserID(ctx context.Context, userID uuid.UUID) ([]*Section, error)
	GetSocialLink(ctx context.Context, socialLinkID uuid.UUID) (*SocialLink, error)
	GetSocialLinkByPlatform(ctx context.Context, arg GetSocialLinkByPlatformParams) (*SocialLink, error)
	GetSocialLinkClicksByUserID(ctx context.Context, userID uuid.UUID) ([]*GetSocialLinkClicksByUserIDRow, error)
	GetSocialLinksByUserID(ctx context.Context, userID uuid.UUID) ([]*SocialLink, error)
	GetTheme(ctx context.Context, themeID uuid.UUID) (*Theme, error)
	GetThemeByName(ctx context.Context, name string) (*Theme, error)
	GetUser(ctx context.Context, userID uuid.UUID) (*User, error)
	GetUserByEmail(ctx context.Context, email string) (*User, error)
	GetUserByUsername(ctx context.Context, username string) (*User, error)
	GetUserTheme(ctx context.Context, userThemeID uuid.UUID) (*UserTheme, error)
	GetUserThemeByName(ctx context.Context, arg GetUserThemeByNameParams) (*UserTheme, error)
	GetUserThemes(ctx context.Context, userID uuid.UUID) ([]*UserTheme, error)
	IncrementLinkClickCount(ctx context.Context, linkID uuid.UUID) error
	ListFreeThemes(ctx context.Context) ([]*Theme, error)
	ListPremiumThemes(ctx context.Context) ([]*Theme, error)
	ListThemes(ctx context.Context) ([]*Theme, error)
	RecordLinkClick(ctx context.Context, arg RecordLinkClickParams) (*Analytic, error)
	RecordSocialLinkClick(ctx context.Context, arg RecordSocialLinkClickParams) (*Analytic, error)
	RemoveLinkFromSection(ctx context.Context, arg RemoveLinkFromSectionParams) error
	UpdateLastLogin(ctx context.Context, userID uuid.UUID) error
	UpdateLink(ctx context.Context, arg UpdateLinkParams) error
	UpdateLinkPosition(ctx context.Context, arg UpdateLinkPositionParams) error
	UpdateOAuthTokens(ctx context.Context, arg UpdateOAuthTokensParams) error
	UpdatePassword(ctx context.Context, arg UpdatePasswordParams) error
	UpdateResetToken(ctx context.Context, arg UpdateResetTokenParams) error
	UpdateSection(ctx context.Context, arg UpdateSectionParams) error
	UpdateSectionLinkPosition(ctx context.Context, arg UpdateSectionLinkPositionParams) error
	UpdateSectionPosition(ctx context.Context, arg UpdateSectionPositionParams) error
	UpdateSocialLink(ctx context.Context, arg UpdateSocialLinkParams) error
	UpdateSocialLinkPosition(ctx context.Context, arg UpdateSocialLinkPositionParams) error
	UpdateTheme(ctx context.Context, arg UpdateThemeParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
	UpdateUserEmail(ctx context.Context, arg UpdateUserEmailParams) error
	UpdateUserPremiumStatus(ctx context.Context, arg UpdateUserPremiumStatusParams) error
	UpdateUserTheme(ctx context.Context, arg UpdateUserThemeParams) error
	UpdateUserUsername(ctx context.Context, arg UpdateUserUsernameParams) error
	UpdateVerificationStatus(ctx context.Context, arg UpdateVerificationStatusParams) error
}

var _ Querier = (*Queries)(nil)
